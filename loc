#!/usr/bin/perl -w

# Tue 28 Jul 18:40:13 BST 2020
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict; use warnings FATAL => 'uninitialized';

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname ..

  Run locate with the given arguments except -F is dropped and when -F
  isn't given --regex is added.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

#use FP::Repl;


my %opt_has_val= (
    all=> 0,
    basename=> 0,
    count=> 0,
    database=> 1,
    existing=> 0,
    follow=> 0,
    #help
    'ignore-case'=> 0,
    limit=> 1,
    #mmap=>
    nofollow=> 0,
    null=> 0,
    statistics=> 0,
    quiet=> 0,
    regexp=> 1,
    regex=> 0,
    #stdio=>
    version=> 0,
    wholename=> 0,
    );

my %opt; # name => [ $argnum, $maybe_val ]

my $argnum= 0; # hacky

sub opt($) {
    my ($k)=@_;
    my $has_val= $opt_has_val{$k} //
        die "bug: missing opt_has_val for '$k'";
    sub {
        my ($whatsthishash, $arg)=@_;
        #repl;
        push @{$opt{$k}}, [ $argnum++, $arg];
    }
}

use Getopt::Long;
my $verbose=0;
my $opt_F;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
           "F"=> \$opt_F,
           "A|all"=> opt "all",
           "b|basename"=> opt "basename",
           "c|count"=> opt "count",
           "d|database=s"=> opt "database",##?
           "e|existing"=> opt "existing",
           "L|follow"=> opt "follow",
           "i|ignore-case"=> opt "ignore-case",
           "limit|n=n"=> opt "limit",
           "m|mmap"=> sub{ },
           "P|nofollow|H"=> opt "nofollow", #XX oppos of follow
           "0|null"=> opt "null",
           "S|statistics"=> opt "statistics",
           "q|quiet"=> opt"quiet",
           "r|regexp=s"=> opt "regexp", ##
           "regex"=> opt "regex",
           "stdio"=> sub { },
           "V|version"=> opt "version",
           "w|wholename"=> opt "wholename",
    ) or exit 1;

my @patterns= @ARGV;

my $regex_given= exists $opt{regex};

usage "both -F and --regex given" if ($opt_F and $regex_given);

my @reconstructed_opt;
for my $k (keys %opt) {
    my $has_val= $opt_has_val{$k} // die "bug";
    for my $tupl (@{$opt{$k}}) {
        my ($argnum, $arg) = @$tupl;
        $reconstructed_opt[$argnum] and die "bug";
        $reconstructed_opt[$argnum] = [ "--$k", $has_val ? $arg : () ];
    }
}

my @opts= (
    ($opt_F or $regex_given) ? () : "--regex",
    (map {
        if (defined $_) {
            @$_
        } else {
            ()
        }
     } @reconstructed_opt),
    );

my @cmd= (
    "locate", @opts, "--", @patterns
    );

exec @cmd
    or exit 127; # which exit code was the right one?

#repl;
