#!/usr/bin/perl -w

# Thu 23 Jul 22:20:51 BST 2020
(my $email='ch%christianjaeger,ch')=~ tr/%,/@./;

use strict; use warnings FATAL => 'uninitialized';
use utf8;

$0=~ /(.*?)([^\/]+)\z/s or die "?";
my ($mydir, $myname)=($1,$2);
sub usage {
    print STDERR map{"$_\n"} @_ if @_;
    print "$myname string

  Parse the given date string and show it as localtime on stdout.  If
  string contains some kind of dash, it will parse both start and end
  time and show them on separate lines.

  (Christian Jaeger <$email>)
";
exit (@_ ? 1 : 0);
}

use Getopt::Long;
our $verbose=0;
#our $opt_dry;
GetOptions("verbose"=> \$verbose,
	   "help"=> sub{usage},
	   #"dry-run"=> \$opt_dry,
	   ) or exit 1;
usage unless @ARGV;

use Date::Parse;
use Encode qw(decode_utf8);

sub pt {
    my ($str)=@_;
    my $t= str2time $str
        or die "invalid format of time string: '$str'";
    my $lt= localtime $t;
    print "$t  $lt\n"
        or die "stdout: $!";
}

sub pr {
    my ($str)= @_;
    my @p= split /[-—]/, $str;
    if (@p==1) {
        pt $p[0]
    } elsif (@p==2) {
        my ($from,$to)=@p;
        my ($frombegin,$fromt)= $from=~
            /^(.*?)\b(\d+:\d+(?:\d+)?(?:\s*(?:pm|am))?)\s*$/si
            or die "no match for first part: '$from'";
        my ($tot,$torest)= $to=~
            /^\s*\b(\d+:\d+(?:\d+)?(?:\s*(?:pm|am))?)(.*)/si
            or die "no match for latter part: '$to'";
        my $t1= "$from $torest";
        my $t2= "$frombegin $to";
        #use FP::Repl; repl;
        pt $t1;
        pt $t2;
    } else {
        die "can't handle more than one dash in: '$str'";
    }
}

#pr "2:00 PM — 5:30 PM UTC+00:00"

pr $_ for map { decode_utf8 $_ } @ARGV;
