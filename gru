#!/bin/bash

set -euo pipefail
IFS=

help () {
    echo "usage: "
    echo "  gru -a  -- update all git remotes"
    echo "  gru -l  -- list all git remotes"
    echo "  gru foo..  -- update given git remotes"
    echo "  gru    -- update git remote if only a single one exists, "
    echo "            or the contents of \$git-dir/gru-default if exists."
    exit 1
}

to_one_line () {
    echo "$1" | perl -wne 's/\n$/ /s; print'
}

if [ $# -eq 0 ]; then
    remotes=$(git remote)
    remoteslen=$(echo "$remotes" | wc -l)
    if [ "$remoteslen" -eq 1 ]; then
	set -x
	git remote update "$remotes"
    else
	defaultfile="$(git rev-parse --git-dir)/gru-default"
	if [ -e "$defaultfile" ]; then
            (
                IFS="$(perl -we 'print "\n\r\t"') "
                for remote in $(cat "$defaultfile"); do
                    (
	                set -x
	                git remote update "$remote"
                    )
                done
            )
	else
	    echo "More than one remote, please specify the ones to use via"
	    echo "arguments or $defaultfile :"
	    echo
	    echo "  $(to_one_line "$remotes")"
	    exit 1
	fi
    fi
elif [ $# -eq 1 -a "$1" == "-a" ]; then
    set -x
    git remote update
elif [ $# -eq 1 -a "$1" == "-l" ]; then
    remotes=$(git remote)
    echo "$(to_one_line "$remotes")"
elif [ $# -eq 1 -a "$1" == "-h" ]; then
    help
elif [ $# -eq 1 -a "$1" == "--help" ]; then
    help
else
    set -x
    git remote update "$@"
fi
